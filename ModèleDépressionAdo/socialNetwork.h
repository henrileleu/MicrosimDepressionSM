#pragma once
#include<array>
#include "vars.h"
#include "vlsRandGenerator.h"
#include "parameters.h"

struct SNUsage
{
	int n;
	double time;
};

// Number of social networks
const static size_t numberOfSN = 6;

#ifndef AGEGRVAR
const static int numberOfAgeGroups = 9;
#define AGEGRVAR
#endif

class socialNetwork
{
public:
	const socialNetwork();
		
	// For now the model will just return the number of SN and total average time for a given age
	const std::array < SNUsage, numberOfAgeGroups> getSNUsage(int yearOfBirth, bool male, double physicalActivityProbability); // Build the SN based on depression risk "mental health might predict heightened social media use in the future"
	const std::array < SNUsage, numberOfAgeGroups> SNUsageFromDepression(int yearOfBirth, bool male, double * priorProbabilities);

private:

	// Generate probabilities
	void SNProbabilityEstimate(double* SNProbability, double physicalActivityProbability, double corr);
	const std::array < SNUsage, numberOfAgeGroups> generateSNUse(int yearOfBirth, bool male, double* SNProbability, bool cteTimeProbabilities);

	// Parameters for SN Use
	const int startYear = 2004;
	const double proportionUsers1114male[numberOfSN][18] =
		{ {0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.810,0.786,0.718,0.618,0.501,0.383,0.275,0.186,0.119,0.092,0.040},
		{0.000,0.000,0.183,0.255,0.334,0.412,0.479,0.524,0.540,0.524,0.479,0.412,0.334,0.255,0.183,0.124,0.099,0.048},
		{0.000,0.000,0.000,0.000,0.000,0.036,0.063,0.106,0.166,0.245,0.340,0.446,0.550,0.639,0.699,0.720,0.696,0.639},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.032,0.053,0.083,0.122,0.170,0.223,0.275,0.319,0.349,0.360,0.321,0.319},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.029,0.052,0.086,0.135,0.199,0.276,0.362,0.447,0.519,0.559,0.585},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.092,0.145,0.214,0.298,0.383,0.481} };

	const double proportionUsers1114female[numberOfSN][18] =
		{ {0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.810,0.786,0.718,0.618,0.501,0.383,0.275,0.186,0.119,0.081,0.040},
		{0.000,0.000,0.183,0.255,0.334,0.412,0.479,0.524,0.540,0.524,0.479,0.412,0.334,0.255,0.183,0.124,0.051,0.048},
		{0.000,0.000,0.000,0.000,0.000,0.040,0.071,0.119,0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.810,0.798,0.718},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.036,0.059,0.093,0.138,0.191,0.251,0.309,0.359,0.393,0.405,0.407,0.359},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.031,0.055,0.092,0.145,0.214,0.298,0.390,0.481,0.559,0.596,0.630},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.132,0.207,0.306,0.425,0.619,0.687} };

	const double proportionUsers1625male[numberOfSN][18] =
		{ {0.029,0.043,0.075,0.125,0.197,0.290,0.404,0.529,0.653,0.758,0.830,0.855,0.830,0.758,0.653,0.529,0.511,0.290},
		{0.000,0.000,0.036,0.063,0.106,0.166,0.245,0.340,0.446,0.550,0.639,0.699,0.720,0.699,0.639,0.550,0.534,0.340},
		{0.000,0.000,0.000,0.000,0.000,0.036,0.063,0.106,0.166,0.245,0.340,0.446,0.550,0.639,0.699,0.720,0.708,0.639},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.032,0.053,0.083,0.122,0.170,0.223,0.275,0.319,0.349,0.360,0.321,0.319},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.071,0.119,0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.811,0.786},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.092,0.145,0.214,0.298,0.397,0.481} };


	const double proportionUsers1625female[numberOfSN][18] =
		{ {0.029,0.043,0.075,0.125,0.197,0.290,0.404,0.529,0.653,0.758,0.830,0.855,0.830,0.758,0.653,0.529,0.450,0.290},
		{0.000,0.000,0.022,0.040,0.066,0.103,0.153,0.213,0.278,0.344,0.399,0.437,0.450,0.437,0.399,0.344,0.275,0.213},
		{0.000,0.000,0.000,0.000,0.000,0.040,0.071,0.119,0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.810,0.812,0.718},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.036,0.059,0.093,0.138,0.191,0.251,0.309,0.359,0.393,0.405,0.407,0.359},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.071,0.119,0.186,0.275,0.383,0.501,0.618,0.718,0.786,0.865,0.786},
		{0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.132,0.207,0.306,0.425,0.642,0.687} };

	const double * getProportionUsers(size_t age, bool male);

	const double timeSpentOnSN[numberOfSN] =
	{ 0.110617283950617, 0.0382905982905983, 0.343063063063063, 0.0311111111111111, 0.109268292682927, 0.40280701754386 };




};

